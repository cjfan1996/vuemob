{"remainingRequest":"C:\\Users\\86150\\Desktop\\笔记\\xin\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86150\\Desktop\\笔记\\xin\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86150\\Desktop\\笔记\\xin\\vue_app_00\\src\\components\\xz\\common\\cart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\86150\\Desktop\\笔记\\xin\\vue_app_00\\src\\components\\xz\\common\\cart.vue","mtime":1559273304000},{"path":"C:\\Users\\86150\\Desktop\\笔记\\xin\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\86150\\Desktop\\笔记\\xin\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\86150\\Desktop\\笔记\\xin\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: []\n    };\n  },\n  created: function created() {\n    this.loadMore();\n  },\n  methods: {\n    loadMore: function loadMore() {\n      var _this = this;\n\n      //1创建url地址\n      var url = \"cart\"; //2.发送ajax请求\n\n      this.axios(url).then(function (result) {\n        //获取数组\n        var arr = result.data.data; //创建循环为数组中添加cb属性\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = arr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n            item.cd = false;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        _this.list = arr; //将修改后数据赋值list\n      }); //3.获取服务器购物车数据\n      //4.保存\n    },\n    delItem: function delItem(e) {\n      var _this2 = this;\n\n      // e 事件对象 target 触发事件对象  dataset 所有\n      this.$messagebox({\n        title: \"消息\",\n        showConfirmButton: true,\n        showCancelButton: true\n      }).then(function (result) {\n        if (\"cancel\" == result) {\n          return;\n        } else {\n          var id = e.target.dataset.id;\n\n          _this2.axios(\"del\", {\n            params: {\n              id: id\n            }\n          }).then(function (result) {\n            _this2.loadMore();\n          });\n        }\n      });\n    },\n    checkbox: function checkbox(e) {\n      //获取当前全选按钮状态\n      var rs = e.target.checked; //获取购物车数组列表\n      //创建循环\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n          //将当前食品cd状态修改全选状态\n          item.cd = rs;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    },\n    delAll: function delAll() {\n      var _this3 = this;\n\n      //清空购物车中所有商品\n      //先创建变量 保存空字符串\n      var nString = \"\"; //创建循环遍历数组\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n          //获取当前元素id拼接字符串\n          nString += item.id + \",\";\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      if (nString.length == 0) {\n        this.$messagebox({\n          title: \"是否清空购物车\",\n          showConfirmButton: true,\n          showCancelButton: true\n        });\n        return;\n      } //结果 \"1,2,3\"\n\n\n      var str = nString.substring(0, nString.length - 1);\n      console.log(str); //5 发送ajax请求获取数据\n      //创建url\n      //创建obj \n      //发送ajax请求\n      //刷新\n\n      var url = \"delAll\";\n      var obj = {\n        ids: str\n      };\n      this.axios.get(url, {\n        params: obj\n      }).then(function (result) {\n        _this3.loadMore();\n      });\n    },\n    delSelected: function delSelected() {\n      var _this4 = this;\n\n      //功能:删除选中的商品\n      //判断 cd==true 获取id\n      //拼接字符串 \"1,2,3\"\n      // 1.创建变量保存空字符串\n      this.$messagebox({\n        title: \"是否删除要选中商品\",\n        showConfirmButton: true,\n        showCancelButton: true\n      }).then(function (pd) {\n        if (pd == \"confirm\") {\n          var str = \"\"; // 2.创建循环每个数组中元素\n\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = _this4.list[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var item = _step4.value;\n\n              // 3.判断cd==true\n              if (item.cd == true) {\n                // 4.获取当前id 拼接字符串\n                str += item.id + \",\";\n              }\n            } // 5.判断\n\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n\n          if (str.length == 0) {\n            _this4.$messagebox(\"\", \"请选中删除的商品\");\n\n            return;\n          }\n\n          str = str.substring(0, str.length - 1); // 6.发送ajax delAll\n\n          var url = \"delAll\";\n          var obj = {\n            ids: str\n          };\n\n          _this4.axios.get(url, {\n            params: obj\n          }).then(function (result) {\n            // 7.刷新\n            _this4.loadMore();\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["cart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"cart\">\r\n        <div class=\"seletAll\">\r\n            全选\r\n            <input type=\"checkbox\" @change=\"checkbox\">\r\n        </div>\r\n       <!-- 购物商品信息 -->\r\n        <div class=\"cart-item\" v-for=\"(item,index) of list\" :key=\"index\">      \r\n            <div class=\"leftImg\" >\r\n                <input type=\"checkbox\" v-model=\"item.cd\">\r\n                <img :src=\"'http://127.0.0.1:3000/'+item.img\" alt=\"\" class=\"img\">\r\n                <div class=\"rightImg\">\r\n                  <span>{{item.price}}</span>\r\n                <span>{{item.count}}</span>  \r\n                </div>\r\n            </div>\r\n            <mt-button @click=\"delItem\" :data-id=\"item.id\">删除</mt-button>   \r\n        </div>\r\n        <!-- 删除选中商品 -->\r\n        <div class=\"delAll\">\r\n            <mt-button @click=\"delAll\">\r\n                清空购物车\r\n            </mt-button>\r\n            <mt-button @click=\"delSelected\">\r\n                删除选中的商品\r\n            </mt-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data(){\r\n        return{\r\n           list:[]\r\n        }\r\n    },\r\n    created(){\r\n        this.loadMore();\r\n    },\r\n    methods:{\r\n        loadMore(){\r\n           //1创建url地址\r\n           var url = \"cart\"\r\n           //2.发送ajax请求\r\n           this.axios(url).then(result=>{\r\n               //获取数组\r\n               var arr = result.data.data;\r\n               //创建循环为数组中添加cb属性\r\n               for(var item of arr){\r\n                   item.cd=false;\r\n               }\r\n               this.list=arr;\r\n               //将修改后数据赋值list\r\n           })\r\n           //3.获取服务器购物车数据\r\n           //4.保存\r\n        },\r\n        delItem(e){ // e 事件对象 target 触发事件对象  dataset 所有\r\n            this.$messagebox({\r\n                title:\"消息\",\r\n                showConfirmButton:true,\r\n                showCancelButton:true\r\n            }).then(result=>{\r\n                if(\"cancel\"==result){\r\n                    return;\r\n                }else{\r\n                    var id= e.target.dataset.id;\r\n                     this.axios(\"del\",{params:{id}}).then(result=>{\r\n                    this.loadMore();\r\n                    })\r\n                }\r\n            })\r\n            \r\n        },\r\n        checkbox(e){\r\n            //获取当前全选按钮状态\r\n            var rs = e.target.checked;\r\n            //获取购物车数组列表\r\n            \r\n            //创建循环\r\n            for(var item of this.list){\r\n                 //将当前食品cd状态修改全选状态\r\n                item.cd=rs;\r\n            }  \r\n        },\r\n        delAll(){\r\n            //清空购物车中所有商品\r\n\r\n            //先创建变量 保存空字符串\r\n            var nString=\"\";\r\n            //创建循环遍历数组\r\n            for(var item of this.list){\r\n                //获取当前元素id拼接字符串\r\n                nString+=item.id+\",\"\r\n            }\r\n            if(nString.length==0){\r\n                this.$messagebox({\r\n                title:\"是否清空购物车\",\r\n                showConfirmButton:true,\r\n                showCancelButton:true \r\n                }\r\n               )\r\n                return;\r\n            }\r\n            //结果 \"1,2,3\"\r\n             var str = nString.substring(0,nString.length-1);\r\n             console.log(str);\r\n             //5 发送ajax请求获取数据\r\n            //创建url\r\n            //创建obj \r\n            //发送ajax请求\r\n            //刷新\r\n            var url=\"delAll\";\r\n            var obj = {ids:str};\r\n            this.axios.get(url,{params:obj}).then(result=>{\r\n                this.loadMore();\r\n            })\r\n\r\n        },\r\n        delSelected(){\r\n            //功能:删除选中的商品\r\n            //判断 cd==true 获取id\r\n            //拼接字符串 \"1,2,3\"\r\n            // 1.创建变量保存空字符串\r\n            this.$messagebox({\r\n                title:\"是否删除要选中商品\",\r\n                showConfirmButton:true,\r\n                showCancelButton:true\r\n            }).then(pd=>{\r\n                if(pd==\"confirm\"){\r\n                   var str =\"\";\r\n            // 2.创建循环每个数组中元素\r\n                for(var item of this.list){ \r\n                // 3.判断cd==true\r\n                     if(item.cd==true){\r\n                  // 4.获取当前id 拼接字符串\r\n                    str+=item.id+\",\"\r\n\r\n                }\r\n            }\r\n            // 5.判断\r\n                if(str.length==0){\r\n                    this.$messagebox(\"\",\"请选中删除的商品\");\r\n                    return;\r\n                }\r\n                    str=str.substring(0,str.length-1);\r\n                    // 6.发送ajax delAll\r\n                    var url=\"delAll\";\r\n                    var obj = {ids:str};\r\n                    this.axios.get(url,{params:obj}).then(result=>{\r\n                    // 7.刷新\r\n                    this.loadMore();\r\n                    }) \r\n                }\r\n            })\r\n                  \r\n        }\r\n    }\r\n}\r\n</script>\r\n    \r\n<style>\r\n    .cart-item{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n     }\r\n     .leftImg{\r\n         display: flex;\r\n     }\r\n     .img{\r\n         width:50px;\r\n         height:50px;\r\n     }\r\n     .rightImg{\r\n         display: flex;\r\n         align-items: center;\r\n     }\r\n</style>\r\n"],"sourceRoot":"src\\components\\xz\\common"}]}